# NOTE! This is a copy of
# https://github.com/mdn/content/blob/main/.github/workflows/pr-review-companion.yml
# with absolutely minor differences.

# Things to do and run after a "PR Test" workflow has finished successfully.
# Note, as of right now, this workflow does a bunch of things. It might be
# worth considering to break it up so there's a dedicated post-PR
# workflow just to posting PR comments about flaws, for example.

name: PR review lint companion

on:
  workflow_run:
    workflows: ["Add lint reviews to PRs"]
    types:
      - completed

jobs:
  review:
    runs-on: ubuntu-latest

    if: github.event.workflow_run.conclusion == 'failure'

    steps:
      - name: "Download artifact"
        uses: actions/github-script@v6
        with:
          script: |
            const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: ${{ github.event.workflow_run.id }},
            });
            const matchArtifacts = artifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "diff"
            });
            if (matchArtifacts.length === 0) {
              console.warn(
                'No artifacts to download probably just means nothing ' +
                'was built in the "PR test" workflow. That\'s OK. ' +
                'This is actually not a genuine CI error.'
              );
              throw new Error(
                'No matched build artifacts. ' +
                'Perhaps nothing built in the "PR test" workflow'
              );
            }
            const matchArtifact = matchArtifacts[0];
            const download = await github.rest.actions.downloadArtifact({
                owner: context.repo.owner,
                repo: context.repo.repo,
                artifact_id: matchArtifact.id,
                archive_format: 'zip',
            });
            const fs = require('fs');
            fs.writeFileSync('${{github.workspace}}/diff.zip', Buffer.from(download.data));

      - name: Prepare input data
        run: |
          7z x diff.zip -odiff -bb1
          GITHUB_REF=$(cat diff/event.json | jq -r .pull_request.head.sha)
          echo "GITHUB_REF=${GITHUB_REF}" >> $GITHUB_ENV
          # Because reviewdog submits suggestion if the
          # OWNER ID of the PR's HEAD and the repository are the same, or
          # the branch is created from the same repository.
          # As a workaround, replace those OWNER IDs with `1`.
          EVENT=$(jq '.pull_request.head.repo.owner.id = 1 | .pull_request.base.repo.owner.id = 1' diff/event.json)
          echo "${EVENT}" > diff/event.json

      - name: "Checkout PR"
        uses: actions/checkout@v3
        with:
          ref: ${{ env.GITHUB_REF }}
          path: content

      - uses: actions/setup-go@v4
        with:
          go-version: '1.20'
      - run: go version
      
      - name: Setup reviewdog
        run: |
          go install github.com/OnkarRuikar/reviewdog/cmd/reviewdog@latest

      - name: Run reviewdog
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          export GITHUB_EVENT_PATH="${{github.workspace}}/diff/event.json"
          cd content
          reviewdog \
            -name="mdn-linter" \
            -f=diff \
            -f.diff.strip=1 \
            -reporter=github-pr-review < "${{github.workspace}}/diff/diff"
